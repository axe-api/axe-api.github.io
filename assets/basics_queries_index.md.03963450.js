import{_ as s,c as a,o as n,a as o}from"./app.9d2350d3.js";const u=JSON.parse('{"title":"Queries","description":"","frontmatter":{},"headers":[{"level":2,"title":"Fields","slug":"fields","link":"#fields","children":[]},{"level":2,"title":"Sorting","slug":"sorting","link":"#sorting","children":[]},{"level":2,"title":"Limits","slug":"limits","link":"#limits","children":[]},{"level":2,"title":"Where Conditions","slug":"where-conditions","link":"#where-conditions","children":[{"level":3,"title":"Simple Condition","slug":"simple-condition","link":"#simple-condition","children":[]},{"level":3,"title":"Multiple Conditions","slug":"multiple-conditions","link":"#multiple-conditions","children":[]},{"level":3,"title":"Logical Expressions","slug":"logical-expressions","link":"#logical-expressions","children":[]},{"level":3,"title":"Recursive Conditions","slug":"recursive-conditions","link":"#recursive-conditions","children":[]},{"level":3,"title":"Parent Conditions","slug":"parent-conditions","link":"#parent-conditions","children":[]}]},{"level":2,"title":"Related Data","slug":"related-data","link":"#related-data","children":[]},{"level":2,"title":"Operators","slug":"operators","link":"#operators","children":[]}],"relativePath":"basics/queries/index.md","lastUpdated":1675194310000}'),l={name:"basics/queries/index.md"},e=o(`<h1 id="queries" tabindex="-1">Queries <a class="header-anchor" href="#queries" aria-hidden="true">#</a></h1><p>Queries are a very important part of Axe API. We take it seriously because we believe that queries will give us flexibility for API clients such as web and mobile. Also, queries can answer your question about why you should use Axe API.</p><p>While you are fetching any data (For example in PAGINATE handlers for now), you can define what kind of data you want to see. In this section, we are going to explain every detail of querying.</p><h2 id="fields" tabindex="-1">Fields <a class="header-anchor" href="#fields" aria-hidden="true">#</a></h2><p>To get only specific fields, you may use a query like the following statement;</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">/api/users?fields:id,name,surname</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>This request is equal on SQL;</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">surname</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"></span></code></pre></div><h2 id="sorting" tabindex="-1">Sorting <a class="header-anchor" href="#sorting" aria-hidden="true">#</a></h2><p>You may sort your results by your selections for multiple columns;</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">/api/users?sort=surname,-name</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>This request is equal on SQL;</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">ORDER BY</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">surname</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">ASC</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">DESC</span></span>
<span class="line"></span></code></pre></div><p>In this request, <code>-</code> means <code>DESC</code>.</p><h2 id="limits" tabindex="-1">Limits <a class="header-anchor" href="#limits" aria-hidden="true">#</a></h2><p>While you are fetching data with pagination, you may send <code>page</code> and <code>per_page</code> variables like this;</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">/api/users?page=2&amp;per_page=25</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="where-conditions" tabindex="-1">Where Conditions <a class="header-anchor" href="#where-conditions" aria-hidden="true">#</a></h2><p>You can use almost everything on any database server. Also, it supports recursive conditions.</p><h3 id="simple-condition" tabindex="-1">Simple Condition <a class="header-anchor" href="#simple-condition" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">/api/users?q={ &quot;id&quot;: 1 }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span></code></pre></div><h3 id="multiple-conditions" tabindex="-1">Multiple Conditions <a class="header-anchor" href="#multiple-conditions" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">/api/users?q=[ {&quot;name&quot;: &quot;John&quot;}, {&quot;surname&quot;: &quot;Locke&quot; } ]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">surname</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Locke</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="logical-expressions" tabindex="-1">Logical Expressions <a class="header-anchor" href="#logical-expressions" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">/api/users?q=[ {&quot;name&quot;: &quot;John&quot;}, {&quot;$or.surname&quot;: &quot;Locke&quot; } ]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">OR</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">surname</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Locke</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><blockquote><p>Also, you can use the <code>$and</code> prefix. If you don&#39;t specify any prefix, $and will be used as default.</p></blockquote><h3 id="recursive-conditions" tabindex="-1">Recursive Conditions <a class="header-anchor" href="#recursive-conditions" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">/api/users?q=[</span></span>
<span class="line"><span style="color:#A6ACCD;">   [{&quot;name&quot;: &quot;John&quot;}, {&quot;$or.surname&quot;: &quot;Locke&quot; }],</span></span>
<span class="line"><span style="color:#A6ACCD;">   [{&quot;$or.age&quot;: 18}, {&quot;$or.id&quot;: 666 }]</span></span>
<span class="line"><span style="color:#A6ACCD;">  ]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">WHERE</span></span>
<span class="line"><span style="color:#A6ACCD;">  (</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">John</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">OR</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">surname</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Locke</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">OR</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">OR</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">666</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span></span>
<span class="line"></span></code></pre></div><h3 id="parent-conditions" tabindex="-1">Parent Conditions <a class="header-anchor" href="#parent-conditions" aria-hidden="true">#</a></h3><p>If there is a one-to-one relationship between the parent record, you can filter the child&#39;s data by parent&#39;s fields.</p><p>Let&#39;s assume that you have a relationship like this;</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Student</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Model</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">school</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IRelation</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">hasOne</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">School</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">school_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">School</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Model</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span></code></pre></div><p>In this scenario, the client is able to query the student by the school&#39;s names;</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">/api/students?q=[ {&quot;school.name.$like&quot;: &quot;*Institution*&quot;} ]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Clients should use the relationship definition title (<code>school</code> in this example) in the query.</p></div><p>The SQL equivalent will be like this;</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> students.</span><span style="color:#89DDFF;">*</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> students</span></span>
<span class="line"><span style="color:#F78C6C;">LEFT JOIN</span><span style="color:#A6ACCD;"> schools </span><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> schools.id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> students.school_id</span></span>
<span class="line"><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> schools.name </span><span style="color:#F78C6C;">LIKE</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%Institution%</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>You can use these kinds of queries for only a <strong>one-to-one</strong> relationship. For example, you <strong>can&#39;t</strong> filter schools by student names.</p></div><h2 id="related-data" tabindex="-1">Related Data <a class="header-anchor" href="#related-data" aria-hidden="true">#</a></h2><p>You can fetch the related data for the <code>PAGINATION</code> and the <code>SHOW</code> handlers.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">/api/users?with=posts{comments{id|content}}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><code>HTTP Response</code></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">email</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user@mail.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">posts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">user_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The first blog post</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">comments</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">post_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The content of the comment.</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>You can use relation names recursively like this; <code>posts{comments{likes}}</code>.</p><p>But also, you can select which columns will be fetched for the relation. You don&#39;t have to fetch all columns.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">/api/users?with=posts{id|title}}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><blockquote><p>Foreign and Primary Key columns will be returned automatically.</p></blockquote><h2 id="operators" tabindex="-1">Operators <a class="header-anchor" href="#operators" aria-hidden="true">#</a></h2><p>You may use the following operators in all of your queries by adding the operator to the end of your field name.</p><table><thead><tr><th>Operator</th><th>Request <code>/api/users?q=</code></th><th>SQL (MySQL)</th></tr></thead><tbody><tr><td><code>$not</code></td><td><code>{&quot;id.$not&quot;: 10}</code></td><td><code>id &lt;&gt; 10</code></td></tr><tr><td><code>$gt</code></td><td><code>{&quot;id.$gt&quot;: 10}</code></td><td><code>id &gt; 10</code></td></tr><tr><td><code>$gte</code></td><td><code>{&quot;id.$gte&quot;: 10}</code></td><td><code>id &gt;= 10</code></td></tr><tr><td><code>$lt</code></td><td><code>{&quot;id.$lt&quot;: 10}</code></td><td><code>id &lt; 10</code></td></tr><tr><td><code>$lte</code></td><td><code>{&quot;id.$lte&quot;: 10}</code></td><td><code>id &lt;= 10</code></td></tr><tr><td><code>$like</code></td><td><code>{&quot;name.$like&quot;: &quot;Foo*&quot;}</code></td><td><code>name LIKE &#39;Foo%&#39;</code></td></tr><tr><td><code>$notLike</code></td><td><code>{&quot;name.$notLike&quot;: &quot;*Foo*&quot;}</code></td><td><code>name NOT LIKE &#39;%Foo%&#39;</code></td></tr><tr><td><code>$in</code></td><td><code>{&quot;id.$in&quot;: [1,2]}</code></td><td><code>id IN (1, 2)</code></td></tr><tr><td><code>$notIn</code></td><td><code>{&quot;id.$notIn&quot;: [1,2]}</code></td><td><code>id NOT IN (1,2 )</code></td></tr><tr><td><code>$between</code></td><td><code>{&quot;id.$between&quot;: [1, 10]}</code></td><td><code>id BETWEEN (1, 10)</code></td></tr><tr><td><code>$notBetween</code></td><td><code>{&quot;id.$notBetween&quot;: [1, 10]}</code></td><td><code>id NOT BETWEEN (1, 10)</code></td></tr><tr><td></td><td><code>{&quot;id&quot;: null}</code></td><td><code>id IS NULL</code></td></tr><tr><td><code>$not</code></td><td><code>{&quot;id.$not&quot;: null}</code></td><td><code>id IS NOT NULL</code></td></tr></tbody></table>`,54),p=[e];function t(c,r,i,d,y,D){return n(),a("div",null,p)}const F=s(l,[["render",t]]);export{u as __pageData,F as default};
