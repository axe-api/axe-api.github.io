import{_ as s,c as a,o as n,a as e}from"./app.aab962d5.js";const A=JSON.parse('{"title":"Deployments","description":"","frontmatter":{},"headers":[{"level":2,"title":"Compile","slug":"compile","link":"#compile","children":[]},{"level":2,"title":"Execute","slug":"execute","link":"#execute","children":[]},{"level":2,"title":"Migrations","slug":"migrations","link":"#migrations","children":[]},{"level":2,"title":"Dockerize","slug":"dockerize","link":"#dockerize","children":[]},{"level":2,"title":"Docker Compose","slug":"docker-compose","link":"#docker-compose","children":[]},{"level":2,"title":"Dive Deeper","slug":"dive-deeper","link":"#dive-deeper","children":[]}],"relativePath":"basics/deployment.md","lastUpdated":1671908681000}'),o={name:"basics/deployment.md"},l=e(`<h1 id="deployments" tabindex="-1">Deployments <a class="header-anchor" href="#deployments" aria-hidden="true">#</a></h1><p>To deploy an Axe API project, the process is just as straightforward as deploying any other Node.js application. First and foremost, you will need a server or platform that is equipped to install and run the latest release of Node.js.</p><h2 id="compile" tabindex="-1">Compile <a class="header-anchor" href="#compile" aria-hidden="true">#</a></h2><p>Since the Axe API uses TypeScript as the language, you need to compile your application to plain JavaScript in order to run it. You can compile your application by using the following command;</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"></span></code></pre></div><p>After this command, you will have a folder called <code>build</code>, and the <code>build</code> folder would have all of your compiled application codes, migration files, and other necessary parts of the application.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Remember that in the <code>build</code> folder you should define your environment variables in the <code>.env</code> file. Since this is your production build, <code>npm run build</code> command does not include the <code>.env</code> file. You might add <code>.env</code> file automatically to the build folder by editing the <code>scripts/postbuild.sh</code> file if you want.</p></div><h2 id="execute" tabindex="-1">Execute <a class="header-anchor" href="#execute" aria-hidden="true">#</a></h2><p>Your compiled codes are basic Node.js codes. So that, in the <code>build</code> folder, you can execute the application with the following command;</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">index.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">axe</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">All</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">models</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">have</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">been</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">resolved.</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">axe</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Database</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">schema</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">has</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">been</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">validated.</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">axe</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Model</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tree</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">has</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">been</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">created.</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">axe</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Express</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">routes</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">have</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">been</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">created.</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">axe</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">API</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">listens</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">requests</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">on</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">http://localhost:</span><span style="color:#F78C6C;">3000</span></span>
<span class="line"></span></code></pre></div><p>Tada! ðŸŽ‰</p><h2 id="migrations" tabindex="-1">Migrations <a class="header-anchor" href="#migrations" aria-hidden="true">#</a></h2><p><strong>Axe API</strong> adds your migrations files to your <code>build</code> folder. Only thing you should do is executing the migrate command like the following one;</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">knex</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--esm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">migrate:latest</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Batch</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">migrations</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Remember that in your machine you must have the <code>knex</code> cli. You can install it by using the following code:</p><p><code>npm i -g knex</code></p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can find more command example on the <a href="https://knexjs.org/guide/migrations.html#migration-cli" target="_blank" rel="noreferrer">Migration CLI Documentation</a></p></div><h2 id="dockerize" tabindex="-1">Dockerize <a class="header-anchor" href="#dockerize" aria-hidden="true">#</a></h2><p><strong>Axe API</strong> adds <code>Dockerfile</code> to your build folder by default. A standard <strong>Axe API</strong> Dockerfile looks like the following one;</p><div class="language-docker"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> node:18</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Create app directory</span></span>
<span class="line"><span style="color:#F78C6C;">WORKDIR</span><span style="color:#A6ACCD;"> /home</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Install app dependencies</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> package*.json ./</span></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> npm install</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Building for a production</span></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> npm ci --only=production</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># To migrate database changes we need \`knex\` cli</span></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> npm i -g knex</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Bundle app source</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> . .</span></span>
<span class="line"><span style="color:#F78C6C;">EXPOSE</span><span style="color:#A6ACCD;"> 3000</span></span>
<span class="line"><span style="color:#F78C6C;">CMD</span><span style="color:#A6ACCD;"> [</span><span style="color:#C3E88D;">&quot;node&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;index.js&quot;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can change the <code>Dockerfile</code> by your requirements.</p></div><p>Once you build your application, you can execute the following command in the <code>build</code> directory to build a docker image for your application;</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-api-image</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"></span></code></pre></div><p>Once your docker image is ready, you can execute it with the following command;</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">3000</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-api-image</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Please keep in your mind that you should provide all environment variables in <code>.env</code> files or via docker environment parameters.</p></div><h2 id="docker-compose" tabindex="-1">Docker Compose <a class="header-anchor" href="#docker-compose" aria-hidden="true">#</a></h2><p>Using a <code>docker-compose.yml</code> file could be very helpful in your project. You may find a simple example of a <code>docker-compose.yml</code> file in the following one. You are free to edit the example by your requirements.</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">services</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">migration</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-api-image</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">working_dir</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/home</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">command</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">knex --esm migrate:latest</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">environment</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">DB_HOST</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db_host</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">DB_USER</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db_user</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">DB_PASSWORD</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db_password</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">DB_DATABASE</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">your_db_schema</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">app</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">my-api-image</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">command</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">node index.js</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">restart</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">always</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">depends_on</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">migration</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">3000:3000</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">environment</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">DB_HOST</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db_host</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">DB_USER</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db_user</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">DB_PASSWORD</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">db_password</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">DB_DATABASE</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">your_db_schema</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can use <code>host.docker.internal</code> as <code>DB_HOST</code> value to access the dabase which on located in your machine. You can find more details in the Docker documentation.</p></div><h2 id="dive-deeper" tabindex="-1">Dive Deeper <a class="header-anchor" href="#dive-deeper" aria-hidden="true">#</a></h2><p>We tried to show some of the basic deployment methods in here. Nevertheless we know that there are many different scenario which you can use. We encrouge Axe API developers to write blog posts abou how to deploy your application in different environments instead of adding many pages here.</p><p>No matter in which platform or environment you deploy your application, the following facts would be same;</p><ul><li>Your application is a TypeScript application. It should be compiled to plain JavaScript.</li><li>You need a supported Node.js version in the machine which you will deploy.</li><li>You need to execute the migration files via <code>knex</code> cli.</li><li>You must execute the compiled JavaScript file with Node.js</li></ul><p>Other than tehese are just implementation details.</p>`,34),p=[l];function t(c,r,i,y,C,d){return n(),a("div",null,p)}const u=s(o,[["render",t]]);export{A as __pageData,u as default};
