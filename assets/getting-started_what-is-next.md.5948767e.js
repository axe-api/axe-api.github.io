import{_ as t,o as e,c as a,a as n}from"./app.c9dd8490.js";const m=JSON.parse('{"title":"What is next?","description":"","frontmatter":{},"headers":[],"relativePath":"getting-started/what-is-next.md","lastUpdated":1675436748000}'),r={name:"getting-started/what-is-next.md"},s=n('<h1 id="what-is-next" tabindex="-1">What is next? <a class="header-anchor" href="#what-is-next" aria-hidden="true">#</a></h1><p>We tried to describe the fundamentals of <em>Axe API</em> until now. After that, you can directly jump into coding. But again, we strongly suggest that you should read the boring <a href="/architecture-concepts/analyzing/">Architecture</a> parts. Understanding the architecture is the best way to build robust APIs.</p><p>Please keep in mind that <em>Axe API</em> is <strong>not</strong> an <strong>MVC framework</strong>. Treating it not like an <em>MVC framework</em> and stretching the boundaries could be a problem. <em>Axe API</em> has a <strong>distinctive</strong> structure that probably you haven&#39;t met before.</p><p>Good luck with your journey!</p>',4),o=[s];function i(c,d,h,u,_,p){return e(),a("div",null,o)}const g=t(r,[["render",i]]);export{m as __pageData,g as default};
