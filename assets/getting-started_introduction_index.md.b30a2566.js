import{_ as e,c as s,o as t,a}from"./app.9d2350d3.js";const y=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[{"level":2,"title":"What Is Axe API?","slug":"what-is-axe-api","link":"#what-is-axe-api","children":[]},{"level":2,"title":"How It Works?","slug":"how-it-works","link":"#how-it-works","children":[]}],"relativePath":"getting-started/introduction/index.md","lastUpdated":1671908681000}'),o={name:"getting-started/introduction/index.md"},r=a(`<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h1><h2 id="what-is-axe-api" tabindex="-1">What Is Axe API? <a class="header-anchor" href="#what-is-axe-api" aria-hidden="true">#</a></h2><p><strong>Axe API</strong> is the <em>fastest</em> way to create <strong>Rest API</strong> by defining only database models and relationships between them. It is built with <a href="https://www.typescriptlang.org" target="_blank" rel="noreferrer">TypeScript</a> on <a href="http://knexjs.org" target="_blank" rel="noreferrer">Knex.js</a>, and its awesome active records pattern. On the other hand, you have another familiar thing, <a href="https://expressjs.com/" target="_blank" rel="noreferrer">Express</a>.</p><p>You are going to be able to develop an API <strong>10 times faster</strong> with <strong>Axe API</strong>!</p><h2 id="how-it-works" tabindex="-1">How It Works? <a class="header-anchor" href="#how-it-works" aria-hidden="true">#</a></h2><p><a href="https://expressjs.com/" target="_blank" rel="noreferrer">Express</a> and <a href="http://knexjs.org" target="_blank" rel="noreferrer">Knex.js</a> are great tools to create <a href="https://nodejs.org" target="_blank" rel="noreferrer">Node.js</a> based applications. But usually, we code too much the same things to design an API. We aim to reduce code duplication and give you speed by using Axe API.</p><p>Axe API provides you the ability to separate your common tasks to build an API from your business logic. <strong>Axe API</strong> expects model definitions to analyze your routing structure. After you created your models and their relations between them, Axe API can handle all <em>well-known</em> API requests. Creating an API with 5 tables takes almost 15 minutes.</p><p>Shortly, <strong>Axe API</strong> performs three basic functions;</p><ul><li><strong>Analyzes</strong> your models and their relationships to create routes.</li><li><strong>Handles</strong> all HTTP requests.</li><li><strong>Separate</strong> your business logic from API best practices.</li></ul><p>Let&#39;s assume that you have a model like this;</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Model</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">axe-api</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Model</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span></code></pre></div><p>With this model, you will have all of the basic API routes for <strong>User</strong> resources. <strong>Axe API</strong> will create <strong>CRUD</strong> routes for you in the <em>booting</em> process and these routes would be completely ready to be handled and processed by Axe API. The following routes will be handled automatically;</p><ul><li><code>POST api/users</code></li><li><code>GET api/users</code></li><li><code>GET api/users/:id</code></li><li><code>PUT api/users/:id</code></li><li><code>DELETE api/users/:id</code></li></ul><p>This is the magic of <strong>Axe API</strong>!</p>`,14),n=[r];function l(i,p,c,d,h,u){return t(),s("div",null,n)}const A=e(o,[["render",l]]);export{y as __pageData,A as default};
